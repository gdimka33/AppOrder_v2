from База_данных.БД_соединение import выполнить_запрос
from logger import logger
from База_данных.описание_таблиц import TABLES
from База_данных.заполнение_званий import заполнить_справочник_званий
from База_данных.заполнение_должностей import заполнить_справочник_должностей
from База_данных.заполнение_типов_подразделений import заполнить_справочник_типов_подразделений
from База_данных.заполнение_подразделений import заполнить_справочник_подразделений
from База_данных.заполнение_постов import заполнить_справочник_постов
from База_данных.заполнение_типов_нарядов import заполнить_справочник_типов_нарядов


def инициализировать_базу():
    """Проверяет существование необходимых таблиц и заполняет справочники"""
    try:
        # Сначала создаем справочные таблицы
        справочные_таблицы = {
            k: v for k, v in TABLES.items() 
            if k in ['типы_подразделений', 'звания', 'должности', 'подразделения', 'типы_нарядов']
        }
        for имя_таблицы, sql_запрос in справочные_таблицы.items():
            выполнить_запрос(sql_запрос)
            logger.info(f"Проверена/создана таблица {имя_таблицы}")
        # Затем создаем основные таблицы
        основные_таблицы = {k: v for k, v in TABLES.items() if k not in справочные_таблицы.keys()}
        for имя_таблицы, sql_запрос in основные_таблицы.items():
            выполнить_запрос(sql_запрос)
            logger.info(f"Проверена/создана таблица {имя_таблицы}")
        # Заполняем справочники
        заполнить_справочник_типов_подразделений()
        заполнить_справочник_подразделений()
        заполнить_справочник_званий()
        заполнить_справочник_должностей()
        заполнить_справочник_постов()
        заполнить_справочник_типов_нарядов()
    except Exception as e:
        logger.error(f"Ошибка при инициализации базы данных: {e}")
        raise

if __name__ == "__main__":
    инициализировать_базу()
